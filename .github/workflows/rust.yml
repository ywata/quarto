name: Rust build and test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  DATABASE_URL: sqlite://${{ github.workspace }}/sqlite.db

jobs:
  build:
    runs-on: ${{ matrix.runner }}

    strategy:
      matrix:
        include:
          - name: linux-amd64
            runner: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - name: win-amd64
            runner: windows-latest
            target: x86_64-pc-windows-msvc
          - name: macos-amd64
            runner: macos-latest
            target: x86_64-apple-darwin
          - name: macos-arm64
            runner: macos-latest
            target: aarch64-apple-darwin

    steps:
    - uses: actions/cache@v4
      with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose --features init
    - name: Run tests
      run: cargo test --verbose --features init

    - name: init
      run: cargo run --features init -- init

    - name: new-game
      run: echo "UUID=$(cargo run -- new-game)" >> $GITHUB_ENV

    - name: uuid
      run: echo ${{ env.UUID }}

    - name: move
      run: cargo run -- move ${{ env.UUID }} 0 0 BSCH
